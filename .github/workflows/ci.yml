name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        
    - name: Install dependencies
      working-directory: ./backend
      run: uv sync --dev
        
    - name: Run tests with coverage
      working-directory: ./backend
      run: |
        uv run pytest --cov=. --cov-report=xml --cov-report=term-missing --disable-warnings
        
    - name: Upload backend coverage
      uses: codecov/codecov-action@v3
      if: success()
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/WendlerApp/package-lock.json
        
    - name: Install dependencies
      working-directory: ./frontend/WendlerApp
      run: npm ci
      
    - name: Run linting
      working-directory: ./frontend/WendlerApp
      run: npm run lint
      
    - name: Run tests
      working-directory: ./frontend/WendlerApp
      run: npm test -- --ci --coverage --watchAll=false
      
    - name: Build web version
      working-directory: ./frontend/WendlerApp
      run: npm run build:web

  integration:
    name: Integration Check
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: always()
    
    steps:
    - name: Check test results
      run: |
        if [[ "${{ needs.backend.result }}" == "failure" || "${{ needs.frontend.result }}" == "failure" ]]; then
          echo "❌ Some tests failed"
          exit 1
        else
          echo "✅ All tests passed"
        fi

  docker:
    name: Build and Push Docker Image
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    uses: ./.github/workflows/docker.yml
    permissions:
      contents: read
      packages: write
      security-events: write
    with:
      push: true
