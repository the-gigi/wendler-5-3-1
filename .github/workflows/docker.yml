name: Build and Push Docker Image

on:
  workflow_call:
    inputs:
      push:
        description: 'Push image to registry'
        required: false
        default: true
        type: boolean
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=main-
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Wait for image to be available in registry
        if: inputs.push
        run: |
          IMAGE_REF="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-${{ github.sha }}"
          echo "Checking if image is available: $IMAGE_REF"
          
          for i in {1..30}; do
            if docker manifest inspect "$IMAGE_REF" >/dev/null 2>&1; then
              echo "✅ Image is available after $((i*2)) seconds"
              exit 0
            fi
            echo "⏳ Attempt $i/30: Image not yet available, waiting 2 seconds..."
            sleep 2
          done
          
          echo "❌ Image not available after 60 seconds, failing"
          exit 1

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        if: inputs.push
        continue-on-error: true
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-${{ github.sha }}
          format: sarif
          output: trivy-results.sarif

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: inputs.push && hashFiles('trivy-results.sarif') != ''
        with:
          sarif_file: trivy-results.sarif
